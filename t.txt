Done todos {
    # fetch the userInfo endpoint and cache the result in the cache
    # always navigate to onboarding if you can't find any cached token
    # handle signout in userInfo cubit 
    # refresh userInfo after sign in and register 
    # don't refresh the userInfo in the home page
    # update the database seeder to contain the imageUrl method in the faker helper intead of the url method
    # structure the project folders to reflect the three main section of the botton naviation sheet
    # add drawer with user information and additional setting with change theme button
    # accept the bool create param in the doctor info screen
    # stop initializing the variables in doctor_info_form if i an creating a resource and extract the initialization code into function
    # stop scrolling in biography field and remove duplication 
    # attempt to create doctorInfoParams for update 
    #  solve the issue and expiry date problem
    # displaying state suggestion 
    # solve university problem
    # creating one api for creating or updating resoure depending on the store method
    # licenens issue date is not initialized 
    # update resource without file uploads
    # file upload
    # fix work experience one line problem
    # there is a bug when you want to update doctor info the universtiy will be null if not selected
    # create doctor info 
    # lang and skill is dublicated
    # job info not displayed 
    # fetch the data for the specialities and job titles
    # create the main text fields for the doctor form
    # create language selector and dispaly widget
    # create langs and skills cubit
    # work on profile image
    # work in the sync of the langs and skills 
    # fix the issue of the image url 
    # test the update doctor
    # test create doctor
    # fix the scope issue with type ahead widget
    # work on the basic informatio edit 
    # prepare the back end for update user basic database
    # preapre the front end to send the data
    # test update user basic data
    # create new doctor user from the beginning
    # remove forget password from the ui in the login screen
    # create the basic scaffolding for the hospital ( bottom navigation bar - home view - profile view)
    # doctor profile view
    # basic hospital form 
    # Main facility information form ui
    # Main facility information form backend
    # preparing the front to connect with the backend
    # create job add model 
    # show job add by id
    # showAll job adds
    # create the cubit to show all job adds 
    # pagination object
    # create job and details view
    # create job add details cubit
    # handle states in view all job ads
    # define the search criteria that you want in the doctor search add
    # handle pagination in view all job ads
    # work on the ui of the search widget
}

todos {
    # view file uploaded
    # if you change the doctor image in the update method and come back the profile page the image is not updated in the ui only but it's updated successfully to the backend
    # fetch the data for the values in the search widget
}